//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductManagementAssignment.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class user
    {
        public int Id { get; set; }

        [DisplayName("First Name")]
        [Required(ErrorMessage = "First name is a required field")]
        public string firstName { get; set; }

        [DisplayName("Last Name")]
        [Required(ErrorMessage = "Last name is a required field")]
        public string lastName { get; set; }

        [DisplayName("Gender")]
        [Required(ErrorMessage = "Gender is a required field")]
        public string gender { get; set; }

        [DisplayName("Age")]
        [Required(ErrorMessage = "Age is a required field")]
        [Range(18, 200, ErrorMessage = "{0} must be above {1}")]
        public int age { get; set; }

        [DisplayName("Phone Number")]
        [Required(ErrorMessage = "Phone number is a required field")]
        public long phoneNumber { get; set; }

        [DisplayName("Email")]
        [Required(ErrorMessage = "Email is a required field")]
        [RegularExpression("^([0-9a-zA-Z]([-\\.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$", ErrorMessage = "Invalid Email")]
        public string emailID { get; set; }

        [DisplayName("Password")]
        [Required(ErrorMessage = "Password is a required field")]
        [DataType(DataType.Password)]
        public string password { get; set; }

        [DisplayName("Confirm Password")]
        [Required(ErrorMessage = "Confirm Password is a required field")]
        [DataType(DataType.Password)]
        [Compare("password", ErrorMessage = "Passwords do not match!")]
        public string confirm_password { get; set; }
    }
}
